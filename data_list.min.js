(function(E){E.fn.dataList=function(t){var r=E.extend({data:[],inputExtendClass:[],itemContainerSelector:null,itemExtendClass:[],itemRemoveIcon:"&#10006;",name:"",optionExtendClass:[],placeholder:"",selectedValue:[],wrapExtendClass:[]},t);const o="data-list__wrap";const i="data-list__input";const l="data-list__options";const s="data-list__item";const e=()=>{if(!Array.isArray(r.data)){throw new Error('"data" must be a array')}for(const t of r.data){if(t===null||typeof t!=="object"||!t.hasOwnProperty("value")||!t.hasOwnProperty("text")){throw new Error('"data element" must be an object that has 2 properties value and text')}}if(!Array.isArray(r.inputExtendClass)){throw new Error('"inputClass" must be a array')}for(const e in r.inputExtendClass){if(e.trim()===i){throw new Error(`"inputClass" can not be ${i}`)}}if(!Array.isArray(r.itemExtendClass)){throw new Error('"itemClass" must be a array')}for(const e in r.itemExtendClass){if(e.trim()===s){throw new Error(`"itemClass" can not be ${s}`)}}if(!Array.isArray(r.optionExtendClass)){throw new Error('"optionClass" must be a array')}for(const e in r.optionExtendClass){if(e.trim()===l){throw new Error(`"optionClass" can not be ${l}`)}}if(!Array.isArray(r.wrapExtendClass)){throw new Error('"wrapClass" must be a array')}for(const e in r.wrapExtendClass){if(e.trim()===o){throw new Error(`"wrapClass" can not be ${o}`)}}if(!Array.isArray(r.selectedValue)){throw new Error('"selectedValue" must be a array')}};const a=this;var c,d,u,f,n;const p=()=>{c=this.find(`.${o}`);d=this.find(`.${i}`);u=this.find(`.${l}`);f=this.find(`.${l} li`);n=this.find(`.${s}`)};const h=()=>{let t=o;if(r.wrapExtendClass.length>0){t=t+" "+r.wrapExtendClass.join(" ")}let e=i;if(r.inputExtendClass.length>0){e=e+" "+r.inputExtendClass.join(" ")}let n=l;if(r.optionExtendClass.length>0){n=n+" "+r.optionExtendClass.join(" ")}this.empty().html(`<div class="${t}">
                        <input type="text" class="${e}"
                            placeholder="${r.placeholder}" autocomplete="off">
                        <ul class="${n}"></ul>
                    </div>`);p();if(r.selectedValue.length>0){for(const a of r.data){for(const s of r.selectedValue){if(s==a.value){m(a.value,a.text)}}}}p()};const m=(t,e)=>{let n=s;if(r.itemExtendClass.length>0){n=n+" "+r.itemExtendClass.join(" ")}const a=`
                <span class="${n}" data-value="${t}">
                    ${e}
                    <input type="text" name="${r.name}" value="${t}" style="display: none;">
                    <span class="close"
                        onclick="this.closest('.${s}').remove()">${r.itemRemoveIcon}</span>
                </span>
            `;E(a).insertBefore(r.itemContainerSelector===null?c:E(r.itemContainerSelector))};const w=()=>{let t=d.val().trim().toLowerCase();if(t===""){return r.data}const e=[];for(const n of r.data){if(n.text.toLowerCase().includes(t)){e.push(n)}}return e};const C=()=>{u.empty();const t=w();let e="";for(const n of t){e+=`<li data-value="${n.value}">${n.text}</li>`}u.html(e);p();f.off("click").on("click",function(){const t=E(this).data("value");const e=E(this).text();if(a.find(`.${s}[data-value="${t}"]`).length>0){return}m(t,e);d.val("")});u.css("display","block")};var y={init:function(){e();h();d.on("focus",function(){C()}).on("blur",function(){setTimeout(()=>{u.css("display","none")},100)});d.on("keyup",function(){C()})}};y.init();return this}})(jQuery);